name: Update Go

on:
  schedule:
    - cron: '18 2 * * 1'
  workflow_dispatch: {}

jobs:
  update:
    name: Update Go
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update Go Version & Modules
        id: update-go
        run: |
          set -euo pipefail

          if [ -z "${GO_VERSION:-}" ]; then
              echo "No go version set"
              exit 1
          fi

          OLD_GO_VERSION=$(grep -P '^go \d\.\d+' go.mod | cut -d ' ' -f 2)

          go mod edit -go="$GO_VERSION"
          go mod tidy
          go get -u -t ./...
          go mod tidy

          git add go.mod go.sum
          git checkout -- .

          if [ "$OLD_GO_VERSION" == "$GO_VERSION" ]; then
              COMMIT_TITLE="Bump Go Modules"
              COMMIT_BODY="Bumps Go modules used by the project. See the commit for details on what modules were updated."
              COMMIT_SEMVER="semver:patch"
          else
              COMMIT_TITLE="Bump Go from ${OLD_GO_VERSION} to ${GO_VERSION}"
              COMMIT_BODY="Bumps Go from ${OLD_GO_VERSION} to ${GO_VERSION} and update Go modules used by the project. See the commit for details on what modules were updated."
              COMMIT_SEMVER="semver:minor"
          fi

          echo "commit-title=${COMMIT_TITLE}" >> "$GITHUB_ENV"
          echo "commit-body=${COMMIT_BODY}" >> "$GITHUB_ENV"
          echo "commit-semver=${COMMIT_SEMVER}" >> "$GITHUB_ENV"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          author: ${{ secrets.GITHUB_USERNAME }} <${{ secrets.GITHUB_USERNAME }}@users.noreply.github.com>
          body: |-
            ${{ env.commit-body }}

            <details>
            <summary>Release Notes</summary>
            ${{ steps.update-go.outputs.commit-body }}
            </details>
          branch: update/go
          commit-message: |-
            ${{ env.commit-title }}

            ${{ env.commit-body }}
          delete-branch: true
          labels: ${{ env.commit-semver }}, type:task
          signoff: true
          title: ${{ env.commit-title }}
          token: ${{ secrets.PAT }}
